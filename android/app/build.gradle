def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw  GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'


android {
    compileSdkVersion 34 //flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (.android.com/https://developerstudio/build/application-id.html).
        applicationId "com.example.project5"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion  26 //26 //21flutter.minSdkVersion
        targetSdkVersion  34 //34//flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }


    aaptOptions {
        noCompress 'tflite'
        noCompress 'lite'
    }
    namespace 'com.example.project5'
}

flutter {
    source '../..'
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0'
    implementation platform('com.google.firebase:firebase-bom:32.1.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-storage:20.2.1'
    implementation 'org.tensorflow:tensorflow-lite-select-tf-ops:0.0.0-nightly'


    // implementation fileTree(dir: "libs", include: ["*.jar"])
   // implementation 'androidx.appcompat:appcompat:1.6.1'
   // implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //testImplementation  'junit:junit:4.13.2'
    //androidTestCompileImplementation  'androidx.test.ext:junit:1.1.5'
    //androidTestCompileImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    //implementation 'com.google.android.material:material:1.9.0'
   // implementation 'com.google.android:flexbox:2.0.1'
   // implementation 'androidx.cardview:cardview:1.0.0'
   // implementation 'com.google.firebase:firebase-database:20.2.2'
   // implementation 'com.google.android.material:material:1.9.0'
    //implementation 'com.google.firebase:firebase-storage:20.2.1'
    //implementation 'org.tensorflow:tensorflow-lite:+'
    //implementation 'org.tensorflow:tensorflow-tflite-gpu:16.1.0'
   // implementation 'org.tensorflow:tensorflow-lite:+'
    //implementation 'org.tensorflow:tensorflow-lite-gpu:+'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
}
